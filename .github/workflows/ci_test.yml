name: CI Test

on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
  workflow_dispatch:

jobs:

  CI-Test:

    strategy:
      matrix:
        os: [ubuntu-latest, ]  # macos-latest, windows-latest
        python-version: ['3.9', ]  # '3.10', '3.11', '3.12'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install singular
      run: |
        sudo apt-get update
        sudo apt-get install singular

    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Checkout another Repo (antares)
      uses: actions/checkout@v4
      with:
        repository: GDeLaurentis/antares-dev
        token: ${{ secrets.GitHubActions_PAT }}
        path: antares

    - name: Checkout another Repo (linac)
      uses: actions/checkout@v4
      with:
        repository: GDeLaurentis/linac-dev
        token: ${{ secrets.GitHubActions_PAT }}
        path: linac
        ref: feature-vector-spaces

    - name: Checkout another Repo (Pentagon Functions)
      run: git clone https://github.com/GDeLaurentis/py-pentagon-functions.git

    - name: Checkout this Repo
      uses: actions/checkout@v4
      with:
        path: antares-results

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -e linac
        pip install -e antares-results
        pip install -e antares

    - name: Install dependencies and build Pentagon Functions
      working-directory: py-pentagon-functions
      run: |
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/runner/local/lib/x86_64-linux-gnu
        pip install -ve .[with-cpp]
        python setup.py build_ext --verbose

    - name: Check Pentagon Functions installation
      run: |
        ls /home/runner/local/bin
        python -c "import pentagon_functions; print(pentagon_functions.pentagon_functions.script_directory)"

    - name: Test with pytest
      run: |
        cd antares-results
        pytest --verbose -s |& tee coverage.txt
        PYTEST_EXIT_CODE=${PIPESTATUS[0]}
        if [ "$PYTEST_EXIT_CODE" -ne 0 ]; then
          echo "pytest failed with exit code $PYTEST_EXIT_CODE"
          exit 1
        else
          echo "pytest passed with exit code 0"
        fi

    # - name: Run update-badges script
    #   if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
    #   run: |
    #     cd antares-results
    #     python update-badges.py

    # - name: Update badges and commit README.md
    #   if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
    #   uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     file_pattern: README.md
    #     repository: lips
    #     commit_message: "Automatic badge update"
